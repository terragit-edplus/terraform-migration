name: Deploy Backend (Fargate)

on:
  push:
    branches: development
    paths:
      - 'github-backend-test/**'
      - '.github/workflows/deploy-backend-development.yml'

env:
  APP_DIR: github-backend-test          # <--- change if your app folder is different
  CONTAINER_NAME: github-backend-container      # must match your ECS service's container name
  CONTAINER_PORT: 80      # must match your app & target group

jobs:
  deploy:
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write       # required for GitHub OIDC
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region:     ${{ secrets.AWS_REGION }}

      - id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image
        env:
          IMAGE_TAG: ${{ github.sha }}
          REGISTRY:  ${{ steps.ecr.outputs.registry }}
        run: |
          docker build -t "$REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG" "$APP_DIR"
          docker push "$REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG"
          aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_FAMILY }} --query taskDefinition > taskdef.json

      - name: Render task definition
        id: taskdef
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: taskdef.json
          container-name: app
          image: ${{ steps.ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: taskdef.json
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true